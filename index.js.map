{"version":3,"file":"index.js","sources":["src/lib/element-clone.js","src/lib/element-by-id.js","src/lib/element-as-data-uri-svg.js","src/lib/read-closest-svg.js","src/lib/transpile-styles.js","src/lib/transpile-decl.js","src/index.js"],"sourcesContent":["/* Clone from element\n/* ========================================================================== */\n\nexport default function elementClone(element) {\n\t// element clone\n\tconst clone = {};\n\n\t// for each key in the element\n\tfor (let key in element) {\n\t\tif (element[key] instanceof Array) {\n\t\t\t// conditionally clone the child array\n\t\t\tclone[key] = element[key].map(elementClone);\n\t\t} else if (typeof element[key] === 'object') {\n\t\t\t// otherwise, conditionally clone the child object\n\t\t\tclone[key] = elementClone(element[key]);\n\t\t} else {\n\t\t\t// otherwise, copy the child\n\t\t\tclone[key] = element[key];\n\t\t}\n\t}\n\n\t// return the element clone\n\treturn clone;\n}\n","/* Element by ID\n/* ========================================================================== */\n\nexport default function elementById(element, id) {\n\t// conditionally return the matching element\n\tif (element.attr && element.attr.id === id) {\n\t\treturn element;\n\t} else if (element.children) {\n\t\t// otherwise, return matching child elements\n\t\tlet index = -1;\n\t\tlet child;\n\n\t\twhile (child = element.children[++index]) {\n\t\t\tchild = elementById(child, id);\n\n\t\t\tif (child) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t}\n\t}\n\n\t// return undefined if no matching elements are find\n\treturn undefined;\n}\n","/* Tooling\n/* ========================================================================== */\n\n// external tooling\nimport Svgo from 'svgo';\n\n/* Element as a data URI SVG\n/* ========================================================================== */\n\nexport default function elementAsDataURISvg(element, document, opts) {\n\t// rebuild element as <svg>\n\telement.name = 'svg';\n\n\tdelete element.attr.id;\n\n\telement.attr.viewBox = element.attr.viewBox || document.attr.viewBox;\n\n\telement.attr.xmlns = 'http://www.w3.org/2000/svg';\n\n\tconst xml = element.toString({\n\t\tcompressed: true\n\t});\n\n\t// promise data URI\n\treturn (opts.svgo\n\t\t? new Svgo(opts.svgo).optimize(xml)\n\t: Promise.resolve({ data: xml }))\n\t.then(result => `data:image/svg+xml;${opts.utf8 ? `charset=utf-8,${encodeUTF8(result.data)}` : `base64,${Buffer.from(result.data).toString('base64')}`}`);\n}\n\n/* Inline Tooling\n/* ========================================================================== */\n\n// return a UTF-8-encoded string\nfunction encodeUTF8(string) {\n\t// encode as UTF-8\n\treturn encodeURIComponent(\n\t\tstring.replace(\n\t\t\t// collapse whitespace\n\t\t\t/[\\n\\r\\s\\t]+/g, ' '\n\t\t).replace(\n\t\t\t// remove comments\n\t\t\t/<\\!--([\\W\\w]*(?=-->))-->/g, ''\n\t\t).replace(\n\t\t\t// pre-encode ampersands\n\t\t\t/&/g, '%26'\n\t\t)\n\t).replace(\n\t\t// escape commas\n\t\t/'/g, '\\\\\\''\n\t).replace(\n\t\t// un-encode compatible characters\n\t\t/%20/g, ' '\n\t).replace(\n\t\t/%22/g, '\\''\n\t).replace(\n\t\t/%2F/g, '/'\n\t).replace(\n\t\t/%3A/g, ':'\n\t).replace(\n\t\t/%3D/g, '='\n\t).replace(\n\t\t// encode additional incompatible characters\n\t\t/\\(/g, '%28'\n\t).replace(\n\t\t/\\)/g, '%29'\n\t);\n}\n","/* Tooling\n/* ========================================================================== */\n\n// native tooling\nimport fs from 'fs';\nimport path from 'path';\n\n// external tooling\nimport { XmlDocument } from 'xmldoc';\n\n/* Promise the XML tree of the closest svg\n/* ========================================================================== */\n\nexport default function readClosestSVG(id, wds, cache) {\n\treturn wds.reduce(\n\t\t// for each working directory\n\t\t(promise, wd) => promise.catch(() => {\n\t\t\t// set cwd as the current working directory\n\t\t\tlet cwd = wd;\n\n\t\t\t// if id starts with root\n\t\t\tif (starts_with_root(id)) {\n\t\t\t\t// set cwd as the root\n\t\t\t\tcwd = '';\n\t\t\t}\n\n\t\t\t// resolve as a file using cwd/id as file\n\t\t\treturn resolveAsFile(path.join(cwd, id), cache)\n\t\t\t// otherwise, resolve as a directory using cwd/id as dir\n\t\t\t.catch(() => resolve_as_directory(path.join(cwd, id), cache))\n\t\t\t// otherwise, if id does not start with root or relative\n\t\t\t.catch(() => !starts_with_root_or_relative(id)\n\t\t\t\t// resolve as a module using cwd and id\n\t\t\t\t? resolve_as_module(cwd, id, cache)\n\t\t\t\t: Promise.reject()\n\t\t\t)\n\t\t\t// otherwise, reject as id not found\n\t\t\t.catch(() => Promise.reject(`${id} not found`));\n\t\t}),\n\t\tPromise.reject()\n\t).then(\n\t\t// resolve xml contents\n\t\t(result) => ({\n\t\t\tfile: result.file,\n\t\t\tdocument: new XmlDocument(result.contents)\n\t\t})\n\t);\n}\n\nfunction resolveAsFile(file, cache) {\n\t// if file is a file, resolve the contents of file\n\treturn file_contents(file, cache)\n\t// otherwise, if file.svg is a file, resolve the contents of file.svg\n\t.catch(() => file_contents(`${file}.svg`, cache));\n}\n\nfunction resolve_as_directory(dir, cache) {\n\t// if dir/package.json is a file, set pkg as the JSON contents of dir/package.json\n\treturn json_contents(dir, cache).then(\n\t\t// if pkg contains a media field\n\t\tpkg => 'media' in pkg\n\t\t\t// resolve the contents of dir/pkg.media\n\t\t\t? file_contents(path.join(dir, pkg.media), cache)\n\t\t// otherwise, if pkg contains a main field\n\t\t: 'main' in pkg\n\t\t\t// resolve the contents of dir/pkg.main\n\t\t\t? file_contents(path.join(dir, pkg.main), cache)\n\t\t// otherwise, if dir/index.svg is a file, resolve the contents of dir/index.svg\n\t\t: file_contents(path.join(dir, 'index.svg'), cache)\n\t);\n}\n\nfunction resolve_as_module(cwd, id, cache) {\n\treturn node_modules_dirs(cwd).reduce(\n\t\t// for each dir in module dirs using cwd:\n\t\t(promise, dir) => promise.catch(\n\t\t\t// resolve as a file using dir/id as file\n\t\t\t() => resolveAsFile(path.join(dir, id), cache)\n\t\t\t\t// otherwise, resolve as a directory using dir/id as dir\n\t\t\t\t.catch(() => resolve_as_directory(path.join(dir, id), cache))\n\t\t),\n\t\tPromise.reject()\n\t);\n}\n\nfunction node_modules_dirs(cwd) {\n\t// set segments as cwd split by the separator\n\tconst segments = cwd.split(path.sep);\n\n\t// set count as the length of segments\n\tlet count = segments.length;\n\n\t// set dirs as an empty array\n\tconst dirs = [];\n\n\t// while count is greater than 0:\n\twhile (count > 0) {\n\t\t// if segments[count] is not node_modules\n\t\tif (segments[count] !== 'node_modules') {\n\t\t\t// push a new item to dirs as the separator-joined segments[0 - count] and node_modules\n\t\t\tdirs.push(\n\t\t\t\tpath.join(segments.slice(0, count).join('/') || '/', 'node_modules')\n\t\t\t);\n\t\t}\n\n\t\t// set count as count minus 1\n\t\t--count;\n\t}\n\n\treturn dirs;\n}\n\nfunction file_contents(file, cache) {\n\t// if file is a file, resolve the contents of file\n\tcache[file] = cache[file] || new Promise(\n\t\t(resolvePromise, rejectPromise) => fs.readFile(\n\t\t\tfile,\n\t\t\t'utf8',\n\t\t\t(error, contents) => error ? rejectPromise(error) : resolvePromise({\n\t\t\t\tfile,\n\t\t\t\tcontents\n\t\t\t})\n\t\t)\n\t);\n\n\treturn cache[file];\n}\n\nfunction json_contents(dir, cache) {\n\t// path of dir/package.json\n\tconst pkg = path.join(dir, 'package.json');\n\n\t// resolve the JSON contents of dir/package.json\n\tcache[pkg] = cache[pkg] || new Promise(\n\t\t(resolvePromise, rejectPromise) => fs.readFile(\n\t\t\tpkg,\n\t\t\t'utf8',\n\t\t\t(error, contents) => error ? rejectPromise(error) : resolvePromise(JSON.parse(contents))\n\t\t)\n\t);\n\n\treturn cache[pkg];\n}\n\nfunction starts_with_root(id) {\n\treturn /^\\//.test(id);\n}\n\nfunction starts_with_root_or_relative(id) {\n\treturn /^\\.{0,2}\\//.test(id);\n}\n","/* Tooling\n/* ========================================================================== */\n\n// external tooling\nimport parser  from 'postcss-values-parser';\nimport postcss from 'postcss';\n\n/* Transpile element styles with params\n/* ========================================================================== */\n\nexport default function transpileStyles(element, params) {\n\tif (hasStyleAttr(element)) {\n\t\t// conditionally update the style attribute\n\t\telement.attr.style = updatedStyleAttr(element.attr.style, params);\n\t}\n\n\tif (element.children) {\n\t\t// conditionally walk the child elements\n\t\tlet index = -1;\n\t\tlet child;\n\n\t\twhile (child = element.children[++index]) {\n\t\t\ttranspileStyles(child, params);\n\t\t}\n\t}\n}\n\n/* Inline Tooling\n/* ========================================================================== */\n\nfunction hasStyleAttr(element) {\n\treturn element.attr && element.attr.style;\n}\n\nfunction updatedStyleAttr(style, params) {\n\t// parse the style attribute\n\tconst styleAST = postcss.parse(style);\n\n\t// walk the declarations within the style attribute\n\tstyleAST.walkDecls(decl => {\n\t\tconst declAST = parser(decl.value).parse();\n\n\t\t// update the declaration with all transpiled var()s\n\t\tdeclAST.walk(node => {\n\t\t\t// conditionally update the var()\n\t\t\tif (isVarFuntion(node)) {\n\t\t\t\ttranspileVar(node, params);\n\t\t\t}\n\t\t});\n\n\t\tdecl.value = declAST.toString();\n\t});\n\n\t// return the updated style attribute\n\treturn styleAST.toString();\n}\n\n// whether the node is a var()\nfunction isVarFuntion(node) {\n\treturn node.type === 'func' && node.value === 'var' && Object(node.nodes).length && /^--/.test(node.nodes[1].value);\n}\n\n// transpile var()\nfunction transpileVar(node, params) {\n\t// css variable\n\tconst cssvar = node.nodes[1].value;\n\n\t// css variable backup value\n\tconst backup = node.nodes[3];\n\n\tif (cssvar in params) {\n\t\t// conditionally transpile the css var() function into the matched param\n\t\tnode.replaceWith(\n\t\t\tparser.word({ value: params[cssvar] })\n\t\t);\n\t} else if (backup) {\n\t\t// conditionally transpile the css var() function into the backup value\n\t\tnode.replaceWith(backup);\n\t}\n}\n","/* Tooling\n/* ========================================================================== */\n\n// native tooling\nimport path from 'path';\nimport { URLSearchParams } from 'url';\n\n// external tooling\nimport parser from 'postcss-values-parser';\n\n// internal tooling\nimport elementClone     from './element-clone';\nimport elementById      from './element-by-id';\nimport elementAsDURISVG from './element-as-data-uri-svg';\nimport readClosestSVG   from './read-closest-svg';\nimport transpileStyles  from './transpile-styles';\n\n/* Transpile declarations\n/* ========================================================================== */\n\nexport default function transpileDecl(result, promises, decl, opts, cache) { // eslint-disable-line max-params\n\t// path to the current working file and directory by declaration\n\tconst declWF = path.resolve(decl.source && decl.source.input && decl.source.input.file ? decl.source.input.file : result.root.source && result.root.source.input && result.root.source.input.file ? result.root.source.input.file : path.join(process.cwd(), 'index.css'));\n\tconst declWD = path.dirname(declWF);\n\n\t// list of files to watch\n\tconst files = {};\n\n\t// walk each node of the declaration\n\tconst declAST = parser(decl.value).parse();\n\n\tdeclAST.walk(node => {\n\t\t// if the node is a url containing an svg fragment\n\t\tif (isExternalURLFunction(node)) {\n\t\t\t// <url> of url(<url>)\n\t\t\tconst urlNode = node.nodes[1];\n\n\t\t\t// <url> split by fragment identifier symbol (#)\n\t\t\tconst urlParts = urlNode.value.split('#');\n\n\t\t\t// <url> src and query string\n\t\t\tconst [src, queryString] = urlParts[0].split('?');\n\n\t\t\t// <url> fragment identifier\n\t\t\tconst id = urlParts.slice(1).join('#');\n\n\t\t\t// whether the <url> has a fragment identifier\n\t\t\tconst hasID = urlParts.length > 1;\n\n\t\t\t// whether the <url> has search params\n\t\t\tconst searchParams = new URLSearchParams(queryString);\n\n\t\t\t// <url> param()s\n\t\t\tconst params = {\n\t\t\t\t...paramsFromSearchParams(searchParams),\n\t\t\t\t...paramsFromNodes(\n\t\t\t\t\tnode.nodes.slice(2, -1)\n\t\t\t\t)\n\t\t\t};\n\n\t\t\tnode.nodes.slice(2, -1).forEach(childNode => {\n\t\t\t\tchildNode.remove();\n\t\t\t});\n\n\t\t\tpromises.push(\n\t\t\t\treadClosestSVG(src, [declWD].concat(opts.dirs), cache).then(svgResult => {\n\t\t\t\t\tconst file = svgResult.file;\n\t\t\t\t\tconst document = svgResult.document;\n\n\t\t\t\t\t// conditionally watch svgs for changes\n\t\t\t\t\tif (!files[file]) {\n\t\t\t\t\t\tfiles[file] = result.messages.push({\n\t\t\t\t\t\t\ttype: 'dependency',\n\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\tparent: declWF\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// document cache\n\t\t\t\t\tconst ids = document.ids = document.ids || {};\n\n\t\t\t\t\t// conditionally update the document cache\n\t\t\t\t\tif (hasID && !ids[id]) {\n\t\t\t\t\t\tids[id] = elementById(document, id);\n\t\t\t\t\t}\n\n\t\t\t\t\t// element fragment or document\n\t\t\t\t\tconst element = hasID ? ids[id] : document;\n\n\t\t\t\t\t// if the element exists\n\t\t\t\t\tif (element) {\n\t\t\t\t\t\t// clone of the element\n\t\t\t\t\t\tconst clone = elementClone(element);\n\n\t\t\t\t\t\t// update the clone styles using the params\n\t\t\t\t\t\ttranspileStyles(clone, params);\n\n\t\t\t\t\t\t// promise updated <url> and declaration\n\t\t\t\t\t\treturn elementAsDURISVG(clone, document, opts).then(xml => {\n\t\t\t\t\t\t\t// update <url>\n\t\t\t\t\t\t\turlNode.value = xml;\n\n\t\t\t\t\t\t\t// conditionally quote <url>\n\t\t\t\t\t\t\tif (opts.utf8) {\n\t\t\t\t\t\t\t\turlNode.replaceWith(\n\t\t\t\t\t\t\t\t\tparser.string({\n\t\t\t\t\t\t\t\t\t\tvalue: urlNode.value,\n\t\t\t\t\t\t\t\t\t\tquoted: true,\n\t\t\t\t\t\t\t\t\t\traws: Object.assign(urlNode.raws, { quote: '\"' })\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// update declaration\n\t\t\t\t\t\t\tdecl.value = String(declAST);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}).catch(error => {\n\t\t\t\t\tresult.warn(error, node);\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t});\n}\n\n/* Inline Tooling\n/* ========================================================================== */\n\n// whether the node if a function()\nfunction isExternalURLFunction(node) {\n\treturn node.type === 'func' && node.value === 'url' && Object(node.nodes).length && (/^(?!data:)/).test(node.nodes[1].value);\n}\n\n// params from nodes\nfunction paramsFromNodes(nodes) {\n\t// valid params as an object\n\tconst params = {};\n\n\t// for each node\n\tnodes.forEach(node => {\n\t\t// conditionally add the valid param\n\t\tif (isFilledParam(node)) {\n\t\t\tparams[node.nodes[1].value] = String(node.nodes[2]).trim();\n\t\t}\n\t});\n\n\t// return valid params as an object\n\treturn params;\n}\n\n// params from URL search params\nfunction paramsFromSearchParams(searchParams) {\n\t// valid params as an object\n\tconst params = {};\n\n\t// for each search param\n\tsearchParams.forEach((value, key) => {\n\t\tparams[key] = value;\n\t});\n\n\t// return valid params as an object\n\treturn params;\n}\n\n// whether the node is a filled param()\nfunction isFilledParam(node) {\n\treturn node.type === 'func' && node.value === 'param' && node.nodes.length === 4 && node.nodes[1].type === 'word';\n}\n","/* Tooling\n/* ========================================================================== */\n\n// internal tooling\nimport transpileDecl from './lib/transpile-decl';\n\n/* Inline SVGs\n/* ========================================================================== */\n\nconst plugin = opts => {\n\treturn {\n\t\tpostcssPlugin: 'postcss-svg',\n\t\tprepare (result) {\n\t\t\t// svg promises array\n\t\t\tconst promises = [];\n\n\t\t\t// plugin options\n\t\t\tconst normalizedOpts = {\n\t\t\t\t// additional directories to search for SVGs\n\t\t\t\tdirs: 'dirs' in Object(opts) ? [].concat(opts.dirs) : [],\n\t\t\t\t// whether to encode as utf-8\n\t\t\t\tutf8: 'utf8' in Object(opts) ? Boolean(opts.utf8) : true,\n\t\t\t\t// whether and how to compress with svgo\n\t\t\t\tsvgo: 'svgo' in Object(opts) ? Object(opts.svgo) : false\n\t\t\t};\n\n\t\t\t// cache of file content and json content promises\n\t\t\tconst cache = {};\n\n\t\t\treturn {\n\t\t\t\tOnce (root) {\n\t\t\t\t\t// for each declaration in the stylesheet\n\t\t\t\t\troot.walkDecls(decl => {\n\t\t\t\t\t\t// if the declaration contains a url()\n\t\t\t\t\t\tif (containsUrlFunction(decl)) {\n\t\t\t\t\t\t\t// transpile declaration parts\n\t\t\t\t\t\t\ttranspileDecl(result, promises, decl, normalizedOpts, cache);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tasync OnceExit () {\n\t\t\t\t\t// wait for chained svg promises array\n\t\t\t\t\tawait Promise.all(promises);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n}\n\nplugin.postcss = true;\n\nexport default plugin;\n\n/* Inline Tooling\n/* ========================================================================== */\n\n// whether the declaration contains a url()\nfunction containsUrlFunction(decl) {\n\treturn /(^|\\s)url\\(.+\\)(\\s|$)/.test(decl.value);\n}\n"],"names":["elementClone","element","clone","key","Array","map","elementById","id","attr","children","index","child","undefined","elementAsDataURISvg","document","opts","name","viewBox","xmlns","xml","toString","compressed","svgo","Svgo","optimize","Promise","resolve","data","then","result","utf8","encodeUTF8","Buffer","from","string","encodeURIComponent","replace","readClosestSVG","wds","cache","reduce","promise","wd","catch","cwd","starts_with_root","resolveAsFile","path","join","resolve_as_directory","starts_with_root_or_relative","resolve_as_module","reject","file","XmlDocument","contents","file_contents","dir","json_contents","pkg","media","main","node_modules_dirs","segments","split","sep","count","length","dirs","push","slice","resolvePromise","rejectPromise","fs","readFile","error","JSON","parse","test","transpileStyles","params","hasStyleAttr","style","updatedStyleAttr","styleAST","postcss","walkDecls","decl","declAST","parser","value","walk","node","isVarFuntion","transpileVar","type","Object","nodes","cssvar","backup","replaceWith","word","transpileDecl","promises","declWF","source","input","root","process","declWD","dirname","files","isExternalURLFunction","urlNode","urlParts","_urlParts$0$split","_urlParts$0$split2","_slicedToArray","src","queryString","hasID","searchParams","URLSearchParams","_objectSpread","paramsFromSearchParams","paramsFromNodes","forEach","childNode","remove","concat","svgResult","messages","parent","ids","elementAsDURISVG","quoted","raws","assign","quote","String","warn","isFilledParam","trim","plugin","postcssPlugin","prepare","normalizedOpts","Boolean","Once","containsUrlFunction","OnceExit","_asyncToGenerator","all"],"mappings":"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"}